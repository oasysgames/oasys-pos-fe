{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_owner", "type": "address", "internalType": "address" },
        { "name": "_overhead", "type": "uint256", "internalType": "uint256" },
        { "name": "_scalar", "type": "uint256", "internalType": "uint256" },
        {
          "name": "_batcherHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        { "name": "_gasLimit", "type": "uint64", "internalType": "uint64" },
        {
          "name": "_unsafeBlockSigner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_config",
          "type": "tuple",
          "internalType": "struct ResourceMetering.ResourceConfig",
          "components": [
            {
              "name": "maxResourceLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "elasticityMultiplier",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "minimumBaseFee",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "systemTxMaxGas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "maximumBaseFee",
              "type": "uint128",
              "internalType": "uint128"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "UNSAFE_BLOCK_SIGNER_SLOT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batcherHash",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "gasLimit",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "_owner", "type": "address", "internalType": "address" },
        { "name": "_overhead", "type": "uint256", "internalType": "uint256" },
        { "name": "_scalar", "type": "uint256", "internalType": "uint256" },
        {
          "name": "_batcherHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        { "name": "_gasLimit", "type": "uint64", "internalType": "uint64" },
        {
          "name": "_unsafeBlockSigner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_config",
          "type": "tuple",
          "internalType": "struct ResourceMetering.ResourceConfig",
          "components": [
            {
              "name": "maxResourceLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "elasticityMultiplier",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "minimumBaseFee",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "systemTxMaxGas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "maximumBaseFee",
              "type": "uint128",
              "internalType": "uint128"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "minimumGasLimit",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "overhead",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resourceConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ResourceMetering.ResourceConfig",
          "components": [
            {
              "name": "maxResourceLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "elasticityMultiplier",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "minimumBaseFee",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "systemTxMaxGas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "maximumBaseFee",
              "type": "uint128",
              "internalType": "uint128"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "scalar",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setBatcherHash",
      "inputs": [
        { "name": "_batcherHash", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGasConfig",
      "inputs": [
        { "name": "_overhead", "type": "uint256", "internalType": "uint256" },
        { "name": "_scalar", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGasLimit",
      "inputs": [
        { "name": "_gasLimit", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setResourceConfig",
      "inputs": [
        {
          "name": "_config",
          "type": "tuple",
          "internalType": "struct ResourceMetering.ResourceConfig",
          "components": [
            {
              "name": "maxResourceLimit",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "elasticityMultiplier",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseFeeMaxChangeDenominator",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "minimumBaseFee",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "systemTxMaxGas",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "maximumBaseFee",
              "type": "uint128",
              "internalType": "uint128"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setUnsafeBlockSigner",
      "inputs": [
        {
          "name": "_unsafeBlockSigner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unsafeBlockSigner",
      "inputs": [],
      "outputs": [
        { "name": "addr_", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ConfigUpdate",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "updateType",
          "type": "uint8",
          "indexed": true,
          "internalType": "enum SystemConfig.UpdateType"
        },
        {
          "name": "data",
          "type": "bytes",
          "indexed": false,
          "internalType": "bytes"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200204f3803806200204f8339810160408190526200003491620009c1565b620000458787878787878762000052565b5050505050505062000c19565b600054610100900460ff1615808015620000735750600054600160ff909116105b80620000a3575062000090306200022a60201b620007c51760201c565b158015620000a3575060005460ff166001145b6200010c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000130576000805461ff0019166101001790555b6200013a62000239565b6200014588620002a1565b620001508562000320565b6200015c878762000372565b6200016784620003d6565b620001728362000473565b6200017d82620004db565b620001876200081f565b6001600160401b0316846001600160401b03161015620001d95760405162461bcd60e51b815260206004820152601f602482015260008051602062001fef833981519152604482015260640162000103565b801562000220576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b03163b151590565b600054610100900460ff16620002955760405162461bcd60e51b815260206004820152602b60248201526000805160206200202f83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000103565b6200029f6200084c565b565b620002ab620008b3565b6001600160a01b038116620003125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000103565b6200031d816200090f565b50565b60678190556040805160208082018490528251808303909101815290820190915260005b60006000805160206200200f8339815191528360405162000366919062000afa565b60405180910390a35050565b60658290556066819055604080516020810184905290810182905260009060600160408051601f198184030181529190529050600160006000805160206200200f83398151915283604051620003c9919062000afa565b60405180910390a3505050565b620003e06200081f565b6001600160401b0316816001600160401b03161015620004325760405162461bcd60e51b815260206004820152601f602482015260008051602062001fef833981519152604482015260640162000103565b606880546001600160401b0319166001600160401b038316908117909155604080516020808201939093528151808203909301835281019052600262000344565b620004aa7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08826200096160201b620007e11760201c565b604080516001600160a01b03831660208201526000910160408051601f198184030181529190529050600362000344565b8060a001516001600160801b0316816060015163ffffffff1611156200056a5760405162461bcd60e51b815260206004820152603560248201527f53797374656d436f6e6669673a206d696e206261736520666565206d7573742060448201527f6265206c657373207468616e206d617820626173650000000000000000000000606482015260840162000103565b6001816040015160ff1611620005db5760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206260448201526e65206c6172676572207468616e203160881b606482015260840162000103565b606854608082015182516001600160401b0390921691620005fd919062000b68565b63ffffffff161115620006425760405162461bcd60e51b815260206004820152601f602482015260008051602062001fef833981519152604482015260640162000103565b6000816020015160ff1611620006b35760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c60448201526e06965722063616e6e6f74206265203608c1b606482015260840162000103565b8051602082015163ffffffff82169160ff90911690620006d590829062000b93565b620006e1919062000bc5565b63ffffffff16146200075c5760405162461bcd60e51b815260206004820152603760248201527f53797374656d436f6e6669673a20707265636973696f6e206c6f73732077697460448201527f6820746172676574207265736f75726365206c696d6974000000000000000000606482015260840162000103565b805160698054602084015160408501516060860151608087015160a09097015163ffffffff96871664ffffffffff199095169490941764010000000060ff948516021764ffffffffff60281b191665010000000000939092169290920263ffffffff60301b19161766010000000000009185169190910217600160501b600160f01b0319166a01000000000000000000009390941692909202600160701b600160f01b03191692909217600160701b6001600160801b0390921691909102179055565b606954600090620008479063ffffffff6a010000000000000000000082048116911662000bf4565b905090565b600054610100900460ff16620008a85760405162461bcd60e51b815260206004820152602b60248201526000805160206200202f83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000103565b6200029f336200090f565b6033546001600160a01b031633146200029f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000103565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b9055565b80516001600160a01b03811681146200097d57600080fd5b919050565b805163ffffffff811681146200097d57600080fd5b805160ff811681146200097d57600080fd5b80516001600160801b03811681146200097d57600080fd5b6000806000806000806000878903610180811215620009df57600080fd5b620009ea8962000965565b60208a015160408b015160608c015160808d0151939b50919950975095506001600160401b03808216821462000a1f57600080fd5b81955062000a3060a08c0162000965565b945060c060bf198401121562000a4557600080fd5b604051925060c083019150828210818311171562000a7357634e487b7160e01b600052604160045260246000fd5b5060405262000a8560c08a0162000982565b815262000a9560e08a0162000997565b602082015262000aa96101008a0162000997565b604082015262000abd6101208a0162000982565b606082015262000ad16101408a0162000982565b608082015262000ae56101608a01620009a9565b60a08201528091505092959891949750929550565b600060208083528351808285015260005b8181101562000b295785810183015185820160400152820162000b0b565b8181111562000b3c576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff80831681851680830382111562000b8a5762000b8a62000b52565b01949350505050565b600063ffffffff8084168062000bb957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600063ffffffff8083168185168183048111821515161562000beb5762000beb62000b52565b02949350505050565b60006001600160401b0382811684821680830382111562000b8a5762000b8a62000b52565b6113c68062000c296000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063b40a817c116100cd578063f2fde38b11610081578063f68016b711610066578063f68016b714610410578063f975e92514610424578063ffa1ad741461043757600080fd5b8063f2fde38b146103f4578063f45e65d81461040757600080fd5b8063c9b26f61116100b2578063c9b26f61146102a4578063cc731b02146102b7578063e81b2c6d146103eb57600080fd5b8063b40a817c1461027e578063c71973f61461029157600080fd5b80634f16540b11610124578063715018a611610109578063715018a6146102455780638da5cb5b1461024d578063935f029e1461026b57600080fd5b80634f16540b146101d557806354fd4d50146101fc57600080fd5b80630c18c1621461015657806318d13918146101725780631fd19ee1146101875780634add321d146101b4575b600080fd5b61015f60655481565b6040519081526020015b60405180910390f35b61018561018036600461101e565b61043f565b005b61018f610453565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610169565b6101bc610482565b60405167ffffffffffffffff9091168152602001610169565b61015f7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c0881565b6102386040518060400160405280600681526020017f312e31312e30000000000000000000000000000000000000000000000000000081525081565b60405161016991906110ab565b6101856104a8565b60335473ffffffffffffffffffffffffffffffffffffffff1661018f565b6101856102793660046110be565b6104bc565b61018561028c3660046110f8565b6104d2565b61018561029f366004611221565b6104e3565b6101856102b236600461123d565b6104f4565b61037b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152506040805160c08101825260695463ffffffff8082168352640100000000820460ff9081166020850152650100000000008304169383019390935266010000000000008104831660608301526a0100000000000000000000810490921660808201526e0100000000000000000000000000009091046fffffffffffffffffffffffffffffffff1660a082015290565b6040516101699190600060c08201905063ffffffff80845116835260ff602085015116602084015260ff6040850151166040840152806060850151166060840152806080850151166080840152506fffffffffffffffffffffffffffffffff60a08401511660a083015292915050565b61015f60675481565b61018561040236600461101e565b610505565b61015f60665481565b6068546101bc9067ffffffffffffffff1681565b610185610432366004611256565b6105a4565b61015f600081565b6104476107e5565b6104508161084c565b50565b600061047d7f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c085490565b905090565b60695460009061047d9063ffffffff6a01000000000000000000008204811691166112f8565b6104b06107e5565b6104ba6000610909565b565b6104c46107e5565b6104ce8282610980565b5050565b6104da6107e5565b61045081610a11565b6104eb6107e5565b61045081610ad5565b6104fc6107e5565b61045081610ec7565b61050d6107e5565b73ffffffffffffffffffffffffffffffffffffffff811661059b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61045081610909565b600054610100900460ff16158080156105c45750600054600160ff909116105b806105de5750303b1580156105de575060005460ff166001145b6106505760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610592565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905580156106ae57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b6106b6610eef565b6106bf88610505565b6106c885610ec7565b6106d28787610980565b6106db84610a11565b6106e48361084c565b6106ed82610ad5565b6106f5610482565b67ffffffffffffffff168467ffffffffffffffff1610156107585760405162461bcd60e51b815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77006044820152606401610592565b80156107bb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b9055565b60335473ffffffffffffffffffffffffffffffffffffffff1633146104ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610592565b6108757f65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08829055565b6040805173ffffffffffffffffffffffffffffffffffffffff8316602082015260009101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052905060035b60007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be836040516108fd91906110ab565b60405180910390a35050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606582905560668190556040805160208101849052908101829052600090606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529050600160007f1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be83604051610a0491906110ab565b60405180910390a3505050565b610a19610482565b67ffffffffffffffff168167ffffffffffffffff161015610a7c5760405162461bcd60e51b815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77006044820152606401610592565b606880547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff831690811790915560408051602080820193909352815180820390930183528101905260026108cc565b8060a001516fffffffffffffffffffffffffffffffff16816060015163ffffffff161115610b6b5760405162461bcd60e51b815260206004820152603560248201527f53797374656d436f6e6669673a206d696e206261736520666565206d7573742060448201527f6265206c657373207468616e206d6178206261736500000000000000000000006064820152608401610592565b6001816040015160ff1611610be85760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206260448201527f65206c6172676572207468616e203100000000000000000000000000000000006064820152608401610592565b6068546080820151825167ffffffffffffffff90921691610c099190611324565b63ffffffff161115610c5d5760405162461bcd60e51b815260206004820152601f60248201527f53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77006044820152606401610592565b6000816020015160ff1611610cda5760405162461bcd60e51b815260206004820152602f60248201527f53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c60448201527f6965722063616e6e6f74206265203000000000000000000000000000000000006064820152608401610592565b8051602082015163ffffffff82169160ff90911690610cfa908290611343565b610d04919061138d565b63ffffffff1614610d7d5760405162461bcd60e51b815260206004820152603760248201527f53797374656d436f6e6669673a20707265636973696f6e206c6f73732077697460448201527f6820746172676574207265736f75726365206c696d69740000000000000000006064820152608401610592565b805160698054602084015160408501516060860151608087015160a09097015163ffffffff9687167fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000009095169490941764010000000060ff94851602177fffffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffff166501000000000093909216929092027fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff1617660100000000000091851691909102177fffff0000000000000000000000000000000000000000ffffffffffffffffffff166a010000000000000000000093909416929092027fffff00000000000000000000000000000000ffffffffffffffffffffffffffff16929092176e0100000000000000000000000000006fffffffffffffffffffffffffffffffff90921691909102179055565b60678190556040805160208082018490528251808303909101815290820190915260006108cc565b600054610100900460ff16610f6c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610592565b6104ba600054610100900460ff16610fec5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610592565b6104ba33610909565b803573ffffffffffffffffffffffffffffffffffffffff8116811461101957600080fd5b919050565b60006020828403121561103057600080fd5b61103982610ff5565b9392505050565b6000815180845260005b818110156110665760208185018101518683018201520161104a565b81811115611078576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110396020830184611040565b600080604083850312156110d157600080fd5b50508035926020909101359150565b803567ffffffffffffffff8116811461101957600080fd5b60006020828403121561110a57600080fd5b611039826110e0565b803563ffffffff8116811461101957600080fd5b803560ff8116811461101957600080fd5b80356fffffffffffffffffffffffffffffffff8116811461101957600080fd5b600060c0828403121561116a57600080fd5b60405160c0810181811067ffffffffffffffff821117156111b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040529050806111c383611113565b81526111d160208401611127565b60208201526111e260408401611127565b60408201526111f360608401611113565b606082015261120460808401611113565b608082015261121560a08401611138565b60a08201525092915050565b600060c0828403121561123357600080fd5b6110398383611158565b60006020828403121561124f57600080fd5b5035919050565b6000806000806000806000610180888a03121561127257600080fd5b61127b88610ff5565b965060208801359550604088013594506060880135935061129e608089016110e0565b92506112ac60a08901610ff5565b91506112bb8960c08a01611158565b905092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681851680830382111561131b5761131b6112c9565b01949350505050565b600063ffffffff80831681851680830382111561131b5761131b6112c9565b600063ffffffff80841680611381577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600063ffffffff808316818516818304811182151516156113b0576113b06112c9565b0294935050505056fea164736f6c634300080f000a53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77001d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
    "sourceMap": "628:10968:49:-:0;;;3944:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4196:270;4229:6;4260:9;4292:7;4327:12;4364:9;4407:18;4448:7;4196:10;:270::i;:::-;3944:529;;;;;;;628:10968;;4999:735;3111:19:17;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:17;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;;3220:44;3258:4;3220:29;;;;;:44;;:::i;:::-;3219:45;:66;;;;-1:-1:-1;3268:12:17;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:17;;2513:2:111;3157:201:17;;;2495:21:111;2552:2;2532:18;;;2525:30;2591:34;2571:18;;;2564:62;-1:-1:-1;;;2642:18:111;;;2635:44;2696:19;;3157:201:17;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:17;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:17;;;;;3394:65;5298:16:49::1;:14;:16::i;:::-;5324:25;5342:6:::0;5324:17:::1;:25::i;:::-;5426:29;5442:12:::0;5426:15:::1;:29::i;:::-;5465:57;5492:9:::0;5512:7;5465:13:::1;:57::i;:::-;5532:23;5545:9:::0;5532:12:::1;:23::i;:::-;5565:41;5587:18:::0;5565:21:::1;:41::i;:::-;5616:27;5635:7:::0;5616:18:::1;:27::i;:::-;5674:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;5661:30:49::1;:9;-1:-1:-1::0;;;;;5661:30:49::1;;;5653:74;;;::::0;-1:-1:-1;;;5653:74:49;;2928:2:111;5653:74:49::1;::::0;::::1;2910:21:111::0;2967:2;2947:18;;;2940:30;-1:-1:-1;;;;;;;;;;;2986:18:111;;;2979:61;3057:18;;5653:74:49::1;2726:355:111::0;5653:74:49::1;3483:14:17::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:17;;;3553:14;;-1:-1:-1;3238:36:111;;3553:14:17;;3226:2:111;3211:18;3553:14:17;;;;;;;3479:99;3101:483;4999:735:49;;;;;;;:::o;1186:320:18:-;-1:-1:-1;;;;;1476:19:18;;:23;;;1186:320::o;1003:95:16:-;4910:13:17;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:17;;3487:2:111;4902:69:17;;;3469:21:111;3526:2;3506:18;;;3499:30;-1:-1:-1;;;;;;;;;;;3545:18:111;;;3538:62;-1:-1:-1;;;3616:18:111;;;3609:41;3667:19;;4902:69:17;3285:407:111;4902:69:17;1065:26:16::1;:24;:26::i;:::-;1003:95::o:0;2321:198::-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:16;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:16;;3899:2:111;2401:73:16::1;::::0;::::1;3881:21:111::0;3938:2;3918:18;;;3911:30;3977:34;3957:18;;;3950:62;-1:-1:-1;;;4028:18:111;;;4021:36;4074:19;;2401:73:16::1;3697:402:111::0;2401:73:16::1;2484:28;2503:8:::0;2484:18:::1;:28::i;:::-;2321:198:::0;:::o;7879:216:49:-;7945:11;:26;;;8002:24;;;;;;;4250:25:111;;;8002:24:49;;;;;;;;;;4223:18:111;;;8002:24:49;;;7982:17;8041:47;1365:1;-1:-1:-1;;;;;;;;;;;8083:4:49;8041:47;;;;;;:::i;:::-;;;;;;;;7935:160;7879:216;:::o;8542:257::-;8620:8;:20;;;8650:6;:16;;;8697:30;;;;;;5192:25:111;;;5233:18;;;5226:34;;;-1:-1:-1;;5165:18:111;;8697:30:49;;;-1:-1:-1;;8697:30:49;;;;;;;;;;-1:-1:-1;8764:21:49;1365:1;-1:-1:-1;;;;;;;;;;;8787:4:49;8742:50;;;;;;:::i;:::-;;;;;;;;8610:189;8542:257;;:::o;9129:286::-;9209:17;:15;:17::i;:::-;-1:-1:-1;;;;;9196:30:49;:9;-1:-1:-1;;;;;9196:30:49;;;9188:74;;;;-1:-1:-1;;;9188:74:49;;2928:2:111;9188:74:49;;;2910:21:111;2967:2;2947:18;;;2940:30;-1:-1:-1;;;;;;;;;;;2986:18:111;;;2979:61;3057:18;;9188:74:49;2726:355:111;9188:74:49;9272:8;:20;;-1:-1:-1;;;;;;9272:20:49;-1:-1:-1;;;;;9272:20:49;;;;;;;;9323:21;;;;;;;5415:50:111;;;;9323:21:49;;;;;;;;;;5388:18:111;;9323:21:49;;9381:20;9359:49;;7240:284;7318:64;2073:43;7363:18;7318;;;;;:64;;:::i;:::-;7413:30;;;-1:-1:-1;;;;;5640:32:111;;7413:30:49;;;5622:51:111;7393:17:49;;5595:18:111;7413:30:49;;;-1:-1:-1;;7413:30:49;;;;;;;;;;-1:-1:-1;7480:30:49;7458:59;;10315:1279;10525:7;:22;;;-1:-1:-1;;;;;10499:48:49;:7;:22;;;:48;;;;10478:136;;;;-1:-1:-1;;;10478:136:49;;5886:2:111;10478:136:49;;;5868:21:111;5925:2;5905:18;;;5898:30;5964:34;5944:18;;;5937:62;6035:23;6015:18;;;6008:51;6076:19;;10478:136:49;5684:417:111;10478:136:49;10733:1;10695:7;:35;;;:39;;;10687:99;;;;-1:-1:-1;;;10687:99:49;;6308:2:111;10687:99:49;;;6290:21:111;6347:2;6327:18;;;6320:30;6386:34;6366:18;;;6359:62;-1:-1:-1;;;6437:18:111;;;6430:45;6492:19;;10687:99:49;6106:411:111;10687:99:49;11035:8;;11009:22;;;;10982:24;;-1:-1:-1;;;;;11035:8:49;;;;10982:49;;11009:22;10982:49;:::i;:::-;:61;;;;10974:105;;;;-1:-1:-1;;;10974:105:49;;2928:2:111;10974:105:49;;;2910:21:111;2967:2;2947:18;;;2940:30;-1:-1:-1;;;;;;;;;;;2986:18:111;;;2979:61;3057:18;;10974:105:49;2726:355:111;10974:105:49;11185:1;11154:7;:28;;;:32;;;11146:92;;;;-1:-1:-1;;;11146:92:49;;7089:2:111;11146:92:49;;;7071:21:111;7128:2;7108:18;;;7101:30;7167:34;7147:18;;;7140:62;-1:-1:-1;;;7218:18:111;;;7211:45;7273:19;;11146:92:49;6887:411:111;11146:92:49;11446:24;;11397:28;;;;11336:134;;;;11337:88;;;;;11338:55;;11337:88;;11338:55;:::i;:::-;11337:88;;;;:::i;:::-;11336:134;;;11315:236;;;;-1:-1:-1;;;11315:236:49;;8065:2:111;11315:236:49;;;8047:21:111;8104:2;8084:18;;;8077:30;8143:34;8123:18;;;8116:62;8214:25;8194:18;;;8187:53;8257:19;;11315:236:49;7863:419:111;11315:236:49;11562:25;;:15;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11562:25:49;;;;;;;;;;;;;;-1:-1:-1;;;;11562:25:49;;;;;;;;;;-1:-1:-1;;;;11562:25:49;;;;;;;;;;;-1:-1:-1;;;;;;;;11562:25:49;;;;;;;;;;-1:-1:-1;;;;;;;;11562:25:49;;;;;-1:-1:-1;;;;;;;;11562:25:49;;;;;;;;;;10315:1279::o;6192:161::-;6315:15;:30;6240:6;;6265:81;;6315:30;;;;;;;6272:32;6265:81;:::i;:::-;6258:88;;6192:161;:::o;1104:111:16:-;4910:13:17;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:17;;3487:2:111;4902:69:17;;;3469:21:111;3526:2;3506:18;;;3499:30;-1:-1:-1;;;;;;;;;;;3545:18:111;;;3538:62;-1:-1:-1;;;3616:18:111;;;3609:41;3667:19;;4902:69:17;3285:407:111;4902:69:17;1176:32:16::1;929:10:19::0;1176:18:16::1;:32::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:16;929:10:19;1662:23:16;1654:68;;;;-1:-1:-1;;;1654:68:16;;8730:2:111;1654:68:16;;;8712:21:111;;;8749:18;;;8742:30;8808:34;8788:18;;;8781:62;8860:18;;1654:68:16;8528:356:111;2673:187:16;2765:6;;;-1:-1:-1;;;;;2781:17:16;;;-1:-1:-1;;;;;;2781:17:16;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;900:134:62:-;995:23;;900:134::o;14:177:111:-;93:13;;-1:-1:-1;;;;;135:31:111;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:167::-;274:13;;327:10;316:22;;306:33;;296:61;;353:1;350;343:12;368:160;445:13;;498:4;487:16;;477:27;;467:55;;518:1;515;508:12;533:177;612:13;;-1:-1:-1;;;;;654:31:111;;644:42;;634:70;;700:1;697;690:12;715:1591;871:6;879;887;895;903;911;919;963:9;954:7;950:23;993:3;989:2;985:12;982:32;;;1010:1;1007;1000:12;982:32;1033:40;1063:9;1033:40;:::i;:::-;1113:2;1098:18;;1092:25;1157:2;1142:18;;1136:25;1201:2;1186:18;;1180:25;1248:3;1233:19;;1227:26;1023:50;;-1:-1:-1;1092:25:111;;-1:-1:-1;1136:25:111;-1:-1:-1;1180:25:111;-1:-1:-1;;;;;;1319:14:111;;;1309:25;;1299:53;;1348:1;1345;1338:12;1299:53;1371:5;1361:15;;1395:50;1440:3;1429:9;1425:19;1395:50;:::i;:::-;1385:60;-1:-1:-1;1480:3:111;-1:-1:-1;;1461:17:111;;1457:27;1454:47;;;1497:1;1494;1487:12;1454:47;1530:2;1524:9;1510:23;;1572:3;1564:6;1560:16;1542:34;;1626:6;1614:10;1611:22;1606:2;1594:10;1591:18;1588:46;1585:169;;;1676:10;1671:3;1667:20;1664:1;1657:31;1711:4;1708:1;1701:15;1739:4;1736:1;1729:15;1585:169;-1:-1:-1;1770:2:111;1763:22;1809:49;1853:3;1838:19;;1809:49;:::i;:::-;1801:6;1794:65;1892:48;1935:3;1924:9;1920:19;1892:48;:::i;:::-;1887:2;1879:6;1875:15;1868:73;1974:48;2017:3;2006:9;2002:19;1974:48;:::i;:::-;1969:2;1961:6;1957:15;1950:73;2056:49;2100:3;2089:9;2085:19;2056:49;:::i;:::-;2051:2;2043:6;2039:15;2032:74;2140:49;2184:3;2173:9;2169:19;2140:49;:::i;:::-;2134:3;2126:6;2122:16;2115:75;2224:50;2269:3;2258:9;2254:19;2224:50;:::i;:::-;2218:3;2210:6;2206:16;2199:76;2294:6;2284:16;;;715:1591;;;;;;;;;;:::o;4418:595::-;4528:4;4557:2;4586;4575:9;4568:21;4618:6;4612:13;4661:6;4656:2;4645:9;4641:18;4634:34;4686:1;4696:140;4710:6;4707:1;4704:13;4696:140;;;4805:14;;;4801:23;;4795:30;4771:17;;;4790:2;4767:26;4760:66;4725:10;;4696:140;;;4854:6;4851:1;4848:13;4845:91;;;4924:1;4919:2;4910:6;4899:9;4895:22;4891:31;4884:42;4845:91;-1:-1:-1;4997:2:111;4976:15;-1:-1:-1;;4972:29:111;4957:45;;;;5004:2;4953:54;;4418:595;-1:-1:-1;;;4418:595:111:o;6522:127::-;6583:10;6578:3;6574:20;6571:1;6564:31;6614:4;6611:1;6604:15;6638:4;6635:1;6628:15;6654:228;6693:3;6721:10;6758:2;6755:1;6751:10;6788:2;6785:1;6781:10;6819:3;6815:2;6811:12;6806:3;6803:21;6800:47;;;6827:18;;:::i;:::-;6863:13;;6654:228;-1:-1:-1;;;;6654:228:111:o;7303:288::-;7342:1;7368:10;7405:2;7402:1;7398:10;7427:3;7417:134;;7473:10;7468:3;7464:20;7461:1;7454:31;7508:4;7505:1;7498:15;7536:4;7533:1;7526:15;7417:134;7569:10;;7565:20;;;;;7303:288;-1:-1:-1;;7303:288:111:o;7596:262::-;7635:7;7667:10;7704:2;7701:1;7697:10;7734:2;7731:1;7727:10;7790:3;7786:2;7782:12;7777:3;7774:21;7767:3;7760:11;7753:19;7749:47;7746:73;;;7799:18;;:::i;:::-;7839:13;;7596:262;-1:-1:-1;;;;7596:262:111:o;8287:236::-;8326:3;-1:-1:-1;;;;;8392:10:111;;;8422;;;8452:12;;;8444:21;;8441:47;;;8468:18;;:::i;8528:356::-;628:10968:49;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "628:10968:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:23;;;;;;;;;160:25:111;;;148:2;133:18;2202:23:49;;;;;;;;6975:135;;;;;;:::i;:::-;;:::i;:::-;;6678:134;;;:::i;:::-;;;764:42:111;752:55;;;734:74;;722:2;707:18;6678:134:49;588:226:111;6192:161:49;;;:::i;:::-;;;993:18:111;981:31;;;963:50;;951:2;936:18;6192:161:49;819:200:111;2022:94:49;;2073:43;2022:94;;3278:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2071:101:16:-;;;:::i;1441:85::-;1513:6;;;;1441:85;;8258:127:49;;;;;;:::i;:::-;;:::i;8920:98::-;;;;;;:::i;:::-;;:::i;9969:138::-;;;;;;:::i;:::-;;:::i;7651:111::-;;;;;;:::i;:::-;;:::i;9574:128::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9673:22:49;;;;;;;;9680:15;9673:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9574:128;;;;;;;4633:4:111;4675:3;4664:9;4660:19;4652:27;;4698:10;4754:2;4745:6;4739:13;4735:22;4724:9;4717:41;4826:4;4818;4810:6;4806:17;4800:24;4796:35;4789:4;4778:9;4774:20;4767:65;4900:4;4892;4884:6;4880:17;4874:24;4870:35;4863:4;4852:9;4848:20;4841:65;4974:2;4966:4;4958:6;4954:17;4948:24;4944:33;4937:4;4926:9;4922:20;4915:63;5046:2;5038:4;5030:6;5026:17;5020:24;5016:33;5009:4;4998:9;4994:20;4987:63;;5118:34;5110:4;5102:6;5098:17;5092:24;5088:65;5081:4;5070:9;5066:20;5059:95;4475:685;;;;;2524:26:49;;;;;;2321:198:16;;;;;;:::i;:::-;;:::i;2313:21:49:-;;;;;;2593:22;;;;;;;;;4999:735;;;;;;:::i;:::-;;:::i;1331:35::-;;1365:1;1331:35;;6975:135;1334:13:16;:11;:13::i;:::-;7062:41:49::1;7084:18;7062:21;:41::i;:::-;6975:135:::0;:::o;6678:134::-;6728:13;6761:44;2073:43;535:12:62;;420:143;6761:44:49;6753:52;;6678:134;:::o;6192:161::-;6315:15;:30;6240:6;;6265:81;;6315:30;;;;;;;6272:32;6265:81;:::i;2071:101:16:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;8258:127:49:-;1334:13:16;:11;:13::i;:::-;8345:33:49::1;8359:9;8370:7;8345:13;:33::i;:::-;8258:127:::0;;:::o;8920:98::-;1334:13:16;:11;:13::i;:::-;8988:23:49::1;9001:9;8988:12;:23::i;9969:138::-:0;1334:13:16;:11;:13::i;:::-;10073:27:49::1;10092:7;10073:18;:27::i;7651:111::-:0;1334:13:16;:11;:13::i;:::-;7726:29:49::1;7742:12;7726:15;:29::i;2321:198:16:-:0;1334:13;:11;:13::i;:::-;2409:22:::1;::::0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:16;;6472:2:111;2401:73:16::1;::::0;::::1;6454:21:111::0;6511:2;6491:18;;;6484:30;6550:34;6530:18;;;6523:62;6621:8;6601:18;;;6594:36;6647:19;;2401:73:16::1;;;;;;;;;2484:28;2503:8;2484:18;:28::i;4999:735:49:-:0;3111:19:17;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:17;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:17;1476:19:18;:23;;;3219:66:17;;-1:-1:-1;3268:12:17;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:17;;6879:2:111;3157:201:17;;;6861:21:111;6918:2;6898:18;;;6891:30;6957:34;6937:18;;;6930:62;7028:16;7008:18;;;7001:44;7062:19;;3157:201:17;6677:410:111;3157:201:17;3368:12;:16;;;;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;;;;;;;3394:65;5298:16:49::1;:14;:16::i;:::-;5324:25;5342:6;5324:17;:25::i;:::-;5426:29;5442:12;5426:15;:29::i;:::-;5465:57;5492:9;5512:7;5465:13;:57::i;:::-;5532:23;5545:9;5532:12;:23::i;:::-;5565:41;5587:18;5565:21;:41::i;:::-;5616:27;5635:7;5616:18;:27::i;:::-;5674:17;:15;:17::i;:::-;5661:30;;:9;:30;;;;5653:74;;;::::0;-1:-1:-1;;;5653:74:49;;7294:2:111;5653:74:49::1;::::0;::::1;7276:21:111::0;7333:2;7313:18;;;7306:30;7372:33;7352:18;;;7345:61;7423:18;;5653:74:49::1;7092:355:111::0;5653:74:49::1;3483:14:17::0;3479:99;;;3529:5;3513:21;;;;;;3553:14;;-1:-1:-1;7604:36:111;;3553:14:17;;7592:2:111;7577:18;3553:14:17;;;;;;;3479:99;3101:483;4999:735:49;;;;;;;:::o;1186:320:18:-;1476:19;;;:23;;;1186:320::o;900:134:62:-;995:23;;900:134::o;1599:130:16:-;1513:6;;1662:23;1513:6;929:10:19;1662:23:16;1654:68;;;;-1:-1:-1;;;1654:68:16;;7853:2:111;1654:68:16;;;7835:21:111;;;7872:18;;;7865:30;7931:34;7911:18;;;7904:62;7983:18;;1654:68:16;7651:356:111;7240:284:49;7318:64;2073:43;7363:18;995:23:62;;900:134;7318:64:49;7413:30;;;764:42:111;752:55;;7413:30:49;;;734:74:111;7393:17:49;;707:18:111;7413:30:49;;;;;;;;;;;;;;-1:-1:-1;7480:30:49;7458:59;1365:1;7458:59;7512:4;7458:59;;;;;;:::i;:::-;;;;;;;;7308:216;7240:284;:::o;2673:187:16:-;2765:6;;;;2781:17;;;;;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;8542:257:49:-;8620:8;:20;;;8650:6;:16;;;8697:30;;;;;;8598:25:111;;;8639:18;;;8632:34;;;-1:-1:-1;;8571:18:111;;8697:30:49;;;;;;;;;;;;;;-1:-1:-1;8764:21:49;1365:1;8742:50;8787:4;8742:50;;;;;;:::i;:::-;;;;;;;;8610:189;8542:257;;:::o;9129:286::-;9209:17;:15;:17::i;:::-;9196:30;;:9;:30;;;;9188:74;;;;-1:-1:-1;;;9188:74:49;;7294:2:111;9188:74:49;;;7276:21:111;7333:2;7313:18;;;7306:30;7372:33;7352:18;;;7345:61;7423:18;;9188:74:49;7092:355:111;9188:74:49;9272:8;:20;;;;;;;;;;;;;9323:21;;;;;;;963:50:111;;;;9323:21:49;;;;;;;;;;936:18:111;;9323:21:49;;9381:20;9359:49;;10315:1279;10525:7;:22;;;10499:48;;:7;:22;;;:48;;;;10478:136;;;;-1:-1:-1;;;10478:136:49;;8879:2:111;10478:136:49;;;8861:21:111;8918:2;8898:18;;;8891:30;8957:34;8937:18;;;8930:62;9028:23;9008:18;;;9001:51;9069:19;;10478:136:49;8677:417:111;10478:136:49;10733:1;10695:7;:35;;;:39;;;10687:99;;;;-1:-1:-1;;;10687:99:49;;9301:2:111;10687:99:49;;;9283:21:111;9340:2;9320:18;;;9313:30;9379:34;9359:18;;;9352:62;9450:17;9430:18;;;9423:45;9485:19;;10687:99:49;9099:411:111;10687:99:49;11035:8;;11009:22;;;;10982:24;;11035:8;;;;;10982:49;;11009:22;10982:49;:::i;:::-;:61;;;;10974:105;;;;-1:-1:-1;;;10974:105:49;;7294:2:111;10974:105:49;;;7276:21:111;7333:2;7313:18;;;7306:30;7372:33;7352:18;;;7345:61;7423:18;;10974:105:49;7092:355:111;10974:105:49;11185:1;11154:7;:28;;;:32;;;11146:92;;;;-1:-1:-1;;;11146:92:49;;9950:2:111;11146:92:49;;;9932:21:111;9989:2;9969:18;;;9962:30;10028:34;10008:18;;;10001:62;10099:17;10079:18;;;10072:45;10134:19;;11146:92:49;9748:411:111;11146:92:49;11446:24;;11397:28;;;;11336:134;;;;11337:88;;;;;11338:55;;11337:88;;11338:55;:::i;:::-;11337:88;;;;:::i;:::-;11336:134;;;11315:236;;;;-1:-1:-1;;;11315:236:49;;10983:2:111;11315:236:49;;;10965:21:111;11022:2;11002:18;;;10995:30;11061:34;11041:18;;;11034:62;11132:25;11112:18;;;11105:53;11175:19;;11315:236:49;10781:419:111;11315:236:49;11562:25;;:15;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10315:1279::o;7879:216::-;7945:11;:26;;;8002:24;;;;;;;160:25:111;;;8002:24:49;;;;;;;;;;133:18:111;;;8002:24:49;;;7982:17;8041:47;;1003:95:16;4910:13:17;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:17;;11407:2:111;4902:69:17;;;11389:21:111;11446:2;11426:18;;;11419:30;11485:34;11465:18;;;11458:62;11556:13;11536:18;;;11529:41;11587:19;;4902:69:17;11205:407:111;4902:69:17;1065:26:16::1;4910:13:17::0;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:17;;11407:2:111;4902:69:17;;;11389:21:111;11446:2;11426:18;;;11419:30;11485:34;11465:18;;;11458:62;11556:13;11536:18;;;11529:41;11587:19;;4902:69:17;11205:407:111;4902:69:17;1176:32:16::1;929:10:19::0;1176:18:16::1;:32::i;196:196:111:-:0;264:20;;324:42;313:54;;303:65;;293:93;;382:1;379;372:12;293:93;196:196;;;:::o;397:186::-;456:6;509:2;497:9;488:7;484:23;480:32;477:52;;;525:1;522;515:12;477:52;548:29;567:9;548:29;:::i;:::-;538:39;397:186;-1:-1:-1;;;397:186:111:o;1206:531::-;1248:3;1286:5;1280:12;1313:6;1308:3;1301:19;1338:1;1348:162;1362:6;1359:1;1356:13;1348:162;;;1424:4;1480:13;;;1476:22;;1470:29;1452:11;;;1448:20;;1441:59;1377:12;1348:162;;;1528:6;1525:1;1522:13;1519:87;;;1594:1;1587:4;1578:6;1573:3;1569:16;1565:27;1558:38;1519:87;-1:-1:-1;1651:2:111;1639:15;1656:66;1635:88;1626:98;;;;1726:4;1622:109;;1206:531;-1:-1:-1;;1206:531:111:o;1742:220::-;1891:2;1880:9;1873:21;1854:4;1911:45;1952:2;1941:9;1937:18;1929:6;1911:45;:::i;1967:248::-;2035:6;2043;2096:2;2084:9;2075:7;2071:23;2067:32;2064:52;;;2112:1;2109;2102:12;2064:52;-1:-1:-1;;2135:23:111;;;2205:2;2190:18;;;2177:32;;-1:-1:-1;1967:248:111:o;2220:171::-;2287:20;;2347:18;2336:30;;2326:41;;2316:69;;2381:1;2378;2371:12;2396:184;2454:6;2507:2;2495:9;2486:7;2482:23;2478:32;2475:52;;;2523:1;2520;2513:12;2475:52;2546:28;2564:9;2546:28;:::i;2585:163::-;2652:20;;2712:10;2701:22;;2691:33;;2681:61;;2738:1;2735;2728:12;2753:156;2819:20;;2879:4;2868:16;;2858:27;;2848:55;;2899:1;2896;2889:12;2914:188;2982:20;;3042:34;3031:46;;3021:57;;3011:85;;3092:1;3089;3082:12;3107:930;3168:5;3216:4;3204:9;3199:3;3195:19;3191:30;3188:50;;;3234:1;3231;3224:12;3188:50;3267:2;3261:9;3309:4;3301:6;3297:17;3380:6;3368:10;3365:22;3344:18;3332:10;3329:34;3326:62;3323:242;;;3421:77;3418:1;3411:88;3522:4;3519:1;3512:15;3550:4;3547:1;3540:15;3323:242;3581:2;3574:22;3614:6;-1:-1:-1;3614:6:111;3644:28;3662:9;3644:28;:::i;:::-;3636:6;3629:44;3706:36;3738:2;3727:9;3723:18;3706:36;:::i;:::-;3701:2;3693:6;3689:15;3682:61;3776:36;3808:2;3797:9;3793:18;3776:36;:::i;:::-;3771:2;3763:6;3759:15;3752:61;3846:37;3879:2;3868:9;3864:18;3846:37;:::i;:::-;3841:2;3833:6;3829:15;3822:62;3918:38;3951:3;3940:9;3936:19;3918:38;:::i;:::-;3912:3;3904:6;3900:16;3893:64;3991:39;4025:3;4014:9;4010:19;3991:39;:::i;:::-;3985:3;3977:6;3973:16;3966:65;;3107:930;;;;:::o;4042:243::-;4134:6;4187:3;4175:9;4166:7;4162:23;4158:33;4155:53;;;4204:1;4201;4194:12;4155:53;4227:52;4271:7;4260:9;4227:52;:::i;4290:180::-;4349:6;4402:2;4390:9;4381:7;4377:23;4373:32;4370:52;;;4418:1;4415;4408:12;4370:52;-1:-1:-1;4441:23:111;;4290:180;-1:-1:-1;4290:180:111:o;5165:670::-;5310:6;5318;5326;5334;5342;5350;5358;5411:3;5399:9;5390:7;5386:23;5382:33;5379:53;;;5428:1;5425;5418:12;5379:53;5451:29;5470:9;5451:29;:::i;:::-;5441:39;;5527:2;5516:9;5512:18;5499:32;5489:42;;5578:2;5567:9;5563:18;5550:32;5540:42;;5629:2;5618:9;5614:18;5601:32;5591:42;;5652:38;5685:3;5674:9;5670:19;5652:38;:::i;:::-;5642:48;;5709:39;5743:3;5732:9;5728:19;5709:39;:::i;:::-;5699:49;;5767:62;5821:7;5815:3;5804:9;5800:19;5767:62;:::i;:::-;5757:72;;5165:670;;;;;;;;;;:::o;5840:184::-;5892:77;5889:1;5882:88;5989:4;5986:1;5979:15;6013:4;6010:1;6003:15;6029:236;6068:3;6096:18;6141:2;6138:1;6134:10;6171:2;6168:1;6164:10;6202:3;6198:2;6194:12;6189:3;6186:21;6183:47;;;6210:18;;:::i;:::-;6246:13;;6029:236;-1:-1:-1;;;;6029:236:111:o;9515:228::-;9554:3;9582:10;9619:2;9616:1;9612:10;9649:2;9646:1;9642:10;9680:3;9676:2;9672:12;9667:3;9664:21;9661:47;;;9688:18;;:::i;10164:345::-;10203:1;10229:10;10266:2;10263:1;10259:10;10288:3;10278:191;;10325:77;10322:1;10315:88;10426:4;10423:1;10416:15;10454:4;10451:1;10444:15;10278:191;10487:10;;10483:20;;;;;10164:345;-1:-1:-1;;10164:345:111:o;10514:262::-;10553:7;10585:10;10622:2;10619:1;10615:10;10652:2;10649:1;10645:10;10708:3;10704:2;10700:12;10695:3;10692:21;10685:3;10678:11;10671:19;10667:47;10664:73;;;10717:18;;:::i;:::-;10757:13;;10514:262;-1:-1:-1;;;;10514:262:111:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "UNSAFE_BLOCK_SIGNER_SLOT()": "4f16540b",
    "VERSION()": "ffa1ad74",
    "batcherHash()": "e81b2c6d",
    "gasLimit()": "f68016b7",
    "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": "f975e925",
    "minimumGasLimit()": "4add321d",
    "overhead()": "0c18c162",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "resourceConfig()": "cc731b02",
    "scalar()": "f45e65d8",
    "setBatcherHash(bytes32)": "c9b26f61",
    "setGasConfig(uint256,uint256)": "935f029e",
    "setGasLimit(uint64)": "b40a817c",
    "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": "c71973f6",
    "setUnsafeBlockSigner(address)": "18d13918",
    "transferOwnership(address)": "f2fde38b",
    "unsafeBlockSigner()": "1fd19ee1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum SystemConfig.UpdateType\",\"name\":\"updateType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ConfigUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNSAFE_BLOCK_SIGNER_SLOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batcherHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overhead\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resourceConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scalar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_batcherHash\",\"type\":\"bytes32\"}],\"name\":\"setBatcherHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"}],\"name\":\"setGasConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"maxResourceLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"elasticityMultiplier\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseFeeMaxChangeDenominator\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"minimumBaseFee\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"systemTxMaxGas\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"maximumBaseFee\",\"type\":\"uint128\"}],\"internalType\":\"struct ResourceMetering.ResourceConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setResourceConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unsafeBlockSigner\",\"type\":\"address\"}],\"name\":\"setUnsafeBlockSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unsafeBlockSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigUpdate(uint256,uint8,bytes)\":{\"params\":{\"data\":\"Encoded update data.\",\"updateType\":\"Type of update.\",\"version\":\"SystemConfig version.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_batcherHash\":\"Initial batcher hash.\",\"_config\":\"Initial resource config.\",\"_gasLimit\":\"Initial gas limit.\",\"_overhead\":\"Initial overhead value.\",\"_owner\":\"Initial owner of the contract.\",\"_scalar\":\"Initial scalar value.\",\"_unsafeBlockSigner\":\"Initial unsafe block signer address.\"}},\"initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))\":{\"params\":{\"_batcherHash\":\"Initial batcher hash.\",\"_config\":\"Initial ResourceConfig.\",\"_gasLimit\":\"Initial gas limit.\",\"_overhead\":\"Initial overhead value.\",\"_owner\":\"Initial owner of the contract.\",\"_scalar\":\"Initial scalar value.\",\"_unsafeBlockSigner\":\"Initial unsafe block signer address.\"}},\"minimumGasLimit()\":{\"returns\":{\"_0\":\"uint64 Minimum gas limit.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resourceConfig()\":{\"returns\":{\"_0\":\"ResourceConfig\"}},\"setBatcherHash(bytes32)\":{\"params\":{\"_batcherHash\":\"New batcher hash.\"}},\"setGasConfig(uint256,uint256)\":{\"params\":{\"_overhead\":\"New overhead value.\",\"_scalar\":\"New scalar value.\"}},\"setGasLimit(uint64)\":{\"params\":{\"_gasLimit\":\"New gas limit.\"}},\"setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))\":{\"params\":{\"_config\":\"The new resource config values.\"}},\"setUnsafeBlockSigner(address)\":{\"params\":{\"_unsafeBlockSigner\":\"New unsafe block signer address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unsafeBlockSigner()\":{\"returns\":{\"addr_\":\"Address of the unsafe block signer.\"}}},\"stateVariables\":{\"UNSAFE_BLOCK_SIGNER_SLOT\":{\"details\":\"NOTE: this value will be migrated to another storage slot in a future version.         User input should not be placed in storage in this contract until this migration         happens. It is unlikely that keccak second preimage resistance will be broken,         but it is better to be safe than sorry.\"},\"version\":{\"custom:semver\":\"1.11.0\"}},\"title\":\"SystemConfig\",\"version\":1},\"userdoc\":{\"events\":{\"ConfigUpdate(uint256,uint8,bytes)\":{\"notice\":\"Emitted when configuration is updated.\"}},\"kind\":\"user\",\"methods\":{\"UNSAFE_BLOCK_SIGNER_SLOT()\":{\"notice\":\"Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value.\"},\"VERSION()\":{\"notice\":\"Version identifier, used for upgrades.\"},\"batcherHash()\":{\"notice\":\"Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes.\"},\"constructor\":{\"notice\":\"Constructs the SystemConfig contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`\"},\"gasLimit()\":{\"notice\":\"L2 block gas limit.\"},\"initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))\":{\"notice\":\"Initializer.         The resource config must be set before the require check.\"},\"minimumGasLimit()\":{\"notice\":\"Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe.\"},\"overhead()\":{\"notice\":\"Fixed L2 gas overhead. Used as part of the L2 fee calculation.\"},\"resourceConfig()\":{\"notice\":\"A getter for the resource config.         Ensures that the struct is returned instead of a tuple.\"},\"scalar()\":{\"notice\":\"Dynamic L2 gas overhead. Used as part of the L2 fee calculation.\"},\"setBatcherHash(bytes32)\":{\"notice\":\"Updates the batcher hash. Can only be called by the owner.\"},\"setGasConfig(uint256,uint256)\":{\"notice\":\"Updates gas config. Can only be called by the owner.\"},\"setGasLimit(uint64)\":{\"notice\":\"Updates the L2 gas limit. Can only be called by the owner.\"},\"setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))\":{\"notice\":\"An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed.\"},\"setUnsafeBlockSigner(address)\":{\"notice\":\"Updates the unsafe block signer address. Can only be called by the owner.\"},\"unsafeBlockSigner()\":{\"notice\":\"High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"The SystemConfig contract is used to manage configuration of an Optimism network.         All configuration is stored on L1 and picked up by L2 as part of the derviation of         the L2 chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/SystemConfig.sol\":\"SystemConfig\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x5c6346060b3e8d3bf4289b20fd869a66fbad8f69dc0b095845f990066b6c4d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://161277a9935cc567d76096a9a3ffc54632fda2020e02b4c5dc5541bfad3d166f\",\"dweb:/ipfs/QmXiDP2A4MPsN9VDNf9YbqbQQTU2J5tffWbJHg45f9LJyN\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359\",\"dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd\"]},\"src/libraries/Storage.sol\":{\"keccak256\":\"0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480\",\"dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.15+commit.e14f2714" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_owner", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_scalar", "type": "uint256" },
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            },
            { "internalType": "uint64", "name": "_gasLimit", "type": "uint64" },
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            },
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "enum SystemConfig.UpdateType",
              "name": "updateType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNSAFE_BLOCK_SIGNER_SLOT",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "batcherHash",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gasLimit",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_owner", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_scalar", "type": "uint256" },
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            },
            { "internalType": "uint64", "name": "_gasLimit", "type": "uint64" },
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            },
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumGasLimit",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "overhead",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "resourceConfig",
          "outputs": [
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "scalar",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_batcherHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBatcherHash"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_overhead",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "_scalar", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasConfig"
        },
        {
          "inputs": [
            { "internalType": "uint64", "name": "_gasLimit", "type": "uint64" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct ResourceMetering.ResourceConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "maxResourceLimit",
                  "type": "uint32"
                },
                {
                  "internalType": "uint8",
                  "name": "elasticityMultiplier",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseFeeMaxChangeDenominator",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "minimumBaseFee",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "systemTxMaxGas",
                  "type": "uint32"
                },
                {
                  "internalType": "uint128",
                  "name": "maximumBaseFee",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResourceConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_unsafeBlockSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnsafeBlockSigner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unsafeBlockSigner",
          "outputs": [
            { "internalType": "address", "name": "addr_", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_batcherHash": "Initial batcher hash.",
              "_config": "Initial resource config.",
              "_gasLimit": "Initial gas limit.",
              "_overhead": "Initial overhead value.",
              "_owner": "Initial owner of the contract.",
              "_scalar": "Initial scalar value.",
              "_unsafeBlockSigner": "Initial unsafe block signer address."
            }
          },
          "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
            "params": {
              "_batcherHash": "Initial batcher hash.",
              "_config": "Initial ResourceConfig.",
              "_gasLimit": "Initial gas limit.",
              "_overhead": "Initial overhead value.",
              "_owner": "Initial owner of the contract.",
              "_scalar": "Initial scalar value.",
              "_unsafeBlockSigner": "Initial unsafe block signer address."
            }
          },
          "minimumGasLimit()": {
            "returns": { "_0": "uint64 Minimum gas limit." }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "resourceConfig()": { "returns": { "_0": "ResourceConfig" } },
          "setBatcherHash(bytes32)": {
            "params": { "_batcherHash": "New batcher hash." }
          },
          "setGasConfig(uint256,uint256)": {
            "params": {
              "_overhead": "New overhead value.",
              "_scalar": "New scalar value."
            }
          },
          "setGasLimit(uint64)": {
            "params": { "_gasLimit": "New gas limit." }
          },
          "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
            "params": { "_config": "The new resource config values." }
          },
          "setUnsafeBlockSigner(address)": {
            "params": {
              "_unsafeBlockSigner": "New unsafe block signer address."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unsafeBlockSigner()": {
            "returns": { "addr_": "Address of the unsafe block signer." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "UNSAFE_BLOCK_SIGNER_SLOT()": {
            "notice": "Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value."
          },
          "VERSION()": { "notice": "Version identifier, used for upgrades." },
          "batcherHash()": {
            "notice": "Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes."
          },
          "constructor": {
            "notice": "Constructs the SystemConfig contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`"
          },
          "gasLimit()": { "notice": "L2 block gas limit." },
          "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
            "notice": "Initializer.         The resource config must be set before the require check."
          },
          "minimumGasLimit()": {
            "notice": "Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe."
          },
          "overhead()": {
            "notice": "Fixed L2 gas overhead. Used as part of the L2 fee calculation."
          },
          "resourceConfig()": {
            "notice": "A getter for the resource config.         Ensures that the struct is returned instead of a tuple."
          },
          "scalar()": {
            "notice": "Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
          },
          "setBatcherHash(bytes32)": {
            "notice": "Updates the batcher hash. Can only be called by the owner."
          },
          "setGasConfig(uint256,uint256)": {
            "notice": "Updates gas config. Can only be called by the owner."
          },
          "setGasLimit(uint64)": {
            "notice": "Updates the L2 gas limit. Can only be called by the owner."
          },
          "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
            "notice": "An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed."
          },
          "setUnsafeBlockSigner(address)": {
            "notice": "Updates the unsafe block signer address. Can only be called by the owner."
          },
          "unsafeBlockSigner()": {
            "notice": "High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address."
          },
          "version()": { "notice": "Semantic version." }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 10000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/L1/SystemConfig.sol": "SystemConfig" },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x5c6346060b3e8d3bf4289b20fd869a66fbad8f69dc0b095845f990066b6c4d2b",
        "urls": [
          "bzz-raw://161277a9935cc567d76096a9a3ffc54632fda2020e02b4c5dc5541bfad3d166f",
          "dweb:/ipfs/QmXiDP2A4MPsN9VDNf9YbqbQQTU2J5tffWbJHg45f9LJyN"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x8fcbc468fa4924f81538d4a6674031e12b62b61a88e869fdf099158a0d0c6a19",
        "urls": [
          "bzz-raw://fc7b9bca6c12fdd38e556650ec1eda3cccb0de4d474d2e97904cbd483b147359",
          "dweb:/ipfs/QmW4oKjDtHJj4cNfMhMLDteQEHSUuZtwrrFUJRnZCbQTJd"
        ],
        "license": "MIT"
      },
      "src/libraries/Storage.sol": {
        "keccak256": "0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd",
        "urls": [
          "bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480",
          "dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 40651,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 40654,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 41079,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 40523,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 40643,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 48530,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "overhead",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 48533,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "scalar",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 48536,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "batcherHash",
        "offset": 0,
        "slot": "103",
        "type": "t_bytes32"
      },
      {
        "astId": 48539,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "gasLimit",
        "offset": 0,
        "slot": "104",
        "type": "t_uint64"
      },
      {
        "astId": 48543,
        "contract": "src/L1/SystemConfig.sol:SystemConfig",
        "label": "_resourceConfig",
        "offset": 0,
        "slot": "105",
        "type": "t_struct(ResourceConfig)48179_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_struct(ResourceConfig)48179_storage": {
        "encoding": "inplace",
        "label": "struct ResourceMetering.ResourceConfig",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 48168,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "maxResourceLimit",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 48170,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "elasticityMultiplier",
            "offset": 4,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 48172,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "baseFeeMaxChangeDenominator",
            "offset": 5,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 48174,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "minimumBaseFee",
            "offset": 6,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 48176,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "systemTxMaxGas",
            "offset": 10,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 48178,
            "contract": "src/L1/SystemConfig.sol:SystemConfig",
            "label": "maximumBaseFee",
            "offset": 14,
            "slot": "0",
            "type": "t_uint128"
          }
        ]
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "UNSAFE_BLOCK_SIGNER_SLOT()": {
        "notice": "Storage slot that the unsafe block signer is stored at.         Storing it at this deterministic storage slot allows for decoupling the storage         layout from the way that `solc` lays out storage. The `op-node` uses a storage         proof to fetch this value."
      },
      "VERSION()": { "notice": "Version identifier, used for upgrades." },
      "batcherHash()": {
        "notice": "Identifier for the batcher.         For version 1 of this configuration, this is represented as an address left-padded         with zeros to 32 bytes."
      },
      "constructor": {
        "notice": "Constructs the SystemConfig contract. Cannot set         the owner to `address(0)` due to the Ownable contract's         implementation, so set it to `address(0xdEaD)`"
      },
      "gasLimit()": { "notice": "L2 block gas limit." },
      "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
        "notice": "Initializer.         The resource config must be set before the require check."
      },
      "minimumGasLimit()": {
        "notice": "Returns the minimum L2 gas limit that can be safely set for the system to         operate. The L2 gas limit must be larger than or equal to the amount of         gas that is allocated for deposits per block plus the amount of gas that         is allocated for the system transaction.         This function is used to determine if changes to parameters are safe."
      },
      "overhead()": {
        "notice": "Fixed L2 gas overhead. Used as part of the L2 fee calculation."
      },
      "resourceConfig()": {
        "notice": "A getter for the resource config.         Ensures that the struct is returned instead of a tuple."
      },
      "scalar()": {
        "notice": "Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
      },
      "setBatcherHash(bytes32)": {
        "notice": "Updates the batcher hash. Can only be called by the owner."
      },
      "setGasConfig(uint256,uint256)": {
        "notice": "Updates gas config. Can only be called by the owner."
      },
      "setGasLimit(uint64)": {
        "notice": "Updates the L2 gas limit. Can only be called by the owner."
      },
      "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
        "notice": "An external setter for the resource config.         In the future, this method may emit an event that the `op-node` picks up         for when the resource config is changed."
      },
      "setUnsafeBlockSigner(address)": {
        "notice": "Updates the unsafe block signer address. Can only be called by the owner."
      },
      "unsafeBlockSigner()": {
        "notice": "High level getter for the unsafe block signer address.         Unsafe blocks can be propagated across the p2p network if they are signed by the         key corresponding to this address."
      },
      "version()": { "notice": "Semantic version." }
    },
    "events": {
      "ConfigUpdate(uint256,uint8,bytes)": {
        "notice": "Emitted when configuration is updated."
      }
    },
    "notice": "The SystemConfig contract is used to manage configuration of an Optimism network.         All configuration is stored on L1 and picked up by L2 as part of the derviation of         the L2 chain."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_batcherHash": "Initial batcher hash.",
          "_config": "Initial resource config.",
          "_gasLimit": "Initial gas limit.",
          "_overhead": "Initial overhead value.",
          "_owner": "Initial owner of the contract.",
          "_scalar": "Initial scalar value.",
          "_unsafeBlockSigner": "Initial unsafe block signer address."
        }
      },
      "initialize(address,uint256,uint256,bytes32,uint64,address,(uint32,uint8,uint8,uint32,uint32,uint128))": {
        "params": {
          "_batcherHash": "Initial batcher hash.",
          "_config": "Initial ResourceConfig.",
          "_gasLimit": "Initial gas limit.",
          "_overhead": "Initial overhead value.",
          "_owner": "Initial owner of the contract.",
          "_scalar": "Initial scalar value.",
          "_unsafeBlockSigner": "Initial unsafe block signer address."
        }
      },
      "minimumGasLimit()": { "returns": { "_0": "uint64 Minimum gas limit." } },
      "owner()": { "details": "Returns the address of the current owner." },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resourceConfig()": { "returns": { "_0": "ResourceConfig" } },
      "setBatcherHash(bytes32)": {
        "params": { "_batcherHash": "New batcher hash." }
      },
      "setGasConfig(uint256,uint256)": {
        "params": {
          "_overhead": "New overhead value.",
          "_scalar": "New scalar value."
        }
      },
      "setGasLimit(uint64)": { "params": { "_gasLimit": "New gas limit." } },
      "setResourceConfig((uint32,uint8,uint8,uint32,uint32,uint128))": {
        "params": { "_config": "The new resource config values." }
      },
      "setUnsafeBlockSigner(address)": {
        "params": { "_unsafeBlockSigner": "New unsafe block signer address." }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unsafeBlockSigner()": {
        "returns": { "addr_": "Address of the unsafe block signer." }
      }
    },
    "events": {
      "ConfigUpdate(uint256,uint8,bytes)": {
        "params": {
          "data": "Encoded update data.",
          "updateType": "Type of update.",
          "version": "SystemConfig version."
        }
      }
    },
    "title": "SystemConfig"
  },
  "ast": {
    "absolutePath": "src/L1/SystemConfig.sol",
    "id": 48942,
    "exportedSymbols": {
      "Constants": [49942],
      "ISemver": [57804],
      "OwnableUpgradeable": [40644],
      "ResourceMetering": [48495],
      "Storage": [50693],
      "SystemConfig": [48941]
    },
    "nodeType": "SourceUnit",
    "src": "32:11565:49",
    "nodes": [
      {
        "id": 48497,
        "nodeType": "PragmaDirective",
        "src": "32:23:49",
        "nodes": [],
        "literals": ["solidity", "0.8", ".15"]
      },
      {
        "id": 48499,
        "nodeType": "ImportDirective",
        "src": "57:103:49",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48942,
        "sourceUnit": 40645,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48498,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40644,
              "src": "66:18:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48501,
        "nodeType": "ImportDirective",
        "src": "161:52:49",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48942,
        "sourceUnit": 57805,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48500,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57804,
              "src": "170:7:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48503,
        "nodeType": "ImportDirective",
        "src": "214:63:49",
        "nodes": [],
        "absolutePath": "src/L1/ResourceMetering.sol",
        "file": "src/L1/ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48942,
        "sourceUnit": 48496,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48502,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48495,
              "src": "223:16:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48505,
        "nodeType": "ImportDirective",
        "src": "278:52:49",
        "nodes": [],
        "absolutePath": "src/libraries/Storage.sol",
        "file": "src/libraries/Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48942,
        "sourceUnit": 50694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48504,
              "name": "Storage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50693,
              "src": "287:7:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48507,
        "nodeType": "ImportDirective",
        "src": "331:56:49",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48942,
        "sourceUnit": 49943,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48506,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49942,
              "src": "340:9:49",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48941,
        "nodeType": "ContractDefinition",
        "src": "628:10968:49",
        "nodes": [
          {
            "id": 48517,
            "nodeType": "EnumDefinition",
            "src": "1163:107:49",
            "nodes": [],
            "canonicalName": "SystemConfig.UpdateType",
            "members": [
              {
                "id": 48513,
                "name": "BATCHER",
                "nameLocation": "1189:7:49",
                "nodeType": "EnumValue",
                "src": "1189:7:49"
              },
              {
                "id": 48514,
                "name": "GAS_CONFIG",
                "nameLocation": "1206:10:49",
                "nodeType": "EnumValue",
                "src": "1206:10:49"
              },
              {
                "id": 48515,
                "name": "GAS_LIMIT",
                "nameLocation": "1226:9:49",
                "nodeType": "EnumValue",
                "src": "1226:9:49"
              },
              {
                "id": 48516,
                "name": "UNSAFE_BLOCK_SIGNER",
                "nameLocation": "1245:19:49",
                "nodeType": "EnumValue",
                "src": "1245:19:49"
              }
            ],
            "name": "UpdateType",
            "nameLocation": "1168:10:49"
          },
          {
            "id": 48521,
            "nodeType": "VariableDeclaration",
            "src": "1331:35:49",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 48518,
              "nodeType": "StructuredDocumentation",
              "src": "1276:50:49",
              "text": "@notice Version identifier, used for upgrades."
            },
            "functionSelector": "ffa1ad74",
            "mutability": "constant",
            "name": "VERSION",
            "nameLocation": "1355:7:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48519,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1331:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 48520,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1365:1:49",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 48527,
            "nodeType": "VariableDeclaration",
            "src": "2022:94:49",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 48522,
              "nodeType": "StructuredDocumentation",
              "src": "1373:644:49",
              "text": "@notice Storage slot that the unsafe block signer is stored at.\n         Storing it at this deterministic storage slot allows for decoupling the storage\n         layout from the way that `solc` lays out storage. The `op-node` uses a storage\n         proof to fetch this value.\n @dev    NOTE: this value will be migrated to another storage slot in a future version.\n         User input should not be placed in storage in this contract until this migration\n         happens. It is unlikely that keccak second preimage resistance will be broken,\n         but it is better to be safe than sorry."
            },
            "functionSelector": "4f16540b",
            "mutability": "constant",
            "name": "UNSAFE_BLOCK_SIGNER_SLOT",
            "nameLocation": "2046:24:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48523,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2022:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "73797374656d636f6e6669672e756e73616665626c6f636b7369676e6572",
                  "id": 48525,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2083:32:49",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
                    "typeString": "literal_string \"systemconfig.unsafeblocksigner\""
                  },
                  "value": "systemconfig.unsafeblocksigner"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
                    "typeString": "literal_string \"systemconfig.unsafeblocksigner\""
                  }
                ],
                "id": 48524,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2073:9:49",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 48526,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2073:43:49",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48530,
            "nodeType": "VariableDeclaration",
            "src": "2202:23:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48528,
              "nodeType": "StructuredDocumentation",
              "src": "2123:74:49",
              "text": "@notice Fixed L2 gas overhead. Used as part of the L2 fee calculation."
            },
            "functionSelector": "0c18c162",
            "mutability": "mutable",
            "name": "overhead",
            "nameLocation": "2217:8:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2202:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48533,
            "nodeType": "VariableDeclaration",
            "src": "2313:21:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48531,
              "nodeType": "StructuredDocumentation",
              "src": "2232:76:49",
              "text": "@notice Dynamic L2 gas overhead. Used as part of the L2 fee calculation."
            },
            "functionSelector": "f45e65d8",
            "mutability": "mutable",
            "name": "scalar",
            "nameLocation": "2328:6:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48532,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2313:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48536,
            "nodeType": "VariableDeclaration",
            "src": "2524:26:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48534,
              "nodeType": "StructuredDocumentation",
              "src": "2341:178:49",
              "text": "@notice Identifier for the batcher.\n         For version 1 of this configuration, this is represented as an address left-padded\n         with zeros to 32 bytes."
            },
            "functionSelector": "e81b2c6d",
            "mutability": "mutable",
            "name": "batcherHash",
            "nameLocation": "2539:11:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 48535,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2524:7:49",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48539,
            "nodeType": "VariableDeclaration",
            "src": "2593:22:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48537,
              "nodeType": "StructuredDocumentation",
              "src": "2557:31:49",
              "text": "@notice L2 block gas limit."
            },
            "functionSelector": "f68016b7",
            "mutability": "mutable",
            "name": "gasLimit",
            "nameLocation": "2607:8:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 48538,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2593:6:49",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "id": 48543,
            "nodeType": "VariableDeclaration",
            "src": "2866:56:49",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48540,
              "nodeType": "StructuredDocumentation",
              "src": "2622:239:49",
              "text": "@notice The configuration for the deposit fee market.\n         Used by the OptimismPortal to meter the cost of buying L2 gas on L1.\n         Set as internal with a getter so that the struct is returned instead of a tuple."
            },
            "mutability": "mutable",
            "name": "_resourceConfig",
            "nameLocation": "2907:15:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
              "typeString": "struct ResourceMetering.ResourceConfig"
            },
            "typeName": {
              "id": 48542,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48541,
                "name": "ResourceMetering.ResourceConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48179,
                "src": "2866:31:49"
              },
              "referencedDeclaration": 48179,
              "src": "2866:31:49",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                "typeString": "struct ResourceMetering.ResourceConfig"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 48553,
            "nodeType": "EventDefinition",
            "src": "3121:87:49",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 48544,
              "nodeType": "StructuredDocumentation",
              "src": "2929:187:49",
              "text": "@notice Emitted when configuration is updated.\n @param version    SystemConfig version.\n @param updateType Type of update.\n @param data       Encoded update data."
            },
            "eventSelector": "1d2b0bda21d56b8bd12d4f94ebacffdfb35f5e226f84b461103bb8beab6353be",
            "name": "ConfigUpdate",
            "nameLocation": "3127:12:49",
            "parameters": {
              "id": 48552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "3156:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48553,
                  "src": "3140:23:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48549,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "updateType",
                  "nameLocation": "3184:10:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48553,
                  "src": "3165:29:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UpdateType_$48517",
                    "typeString": "enum SystemConfig.UpdateType"
                  },
                  "typeName": {
                    "id": 48548,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48547,
                      "name": "UpdateType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48517,
                      "src": "3165:10:49"
                    },
                    "referencedDeclaration": 48517,
                    "src": "3165:10:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UpdateType_$48517",
                      "typeString": "enum SystemConfig.UpdateType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3202:4:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48553,
                  "src": "3196:10:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 48550,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:5:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3139:68:49"
            }
          },
          {
            "id": 48557,
            "nodeType": "VariableDeclaration",
            "src": "3278:41:49",
            "nodes": [],
            "baseFunctions": [57803],
            "constant": true,
            "documentation": {
              "id": 48554,
              "nodeType": "StructuredDocumentation",
              "src": "3214:59:49",
              "text": "@notice Semantic version.\n @custom:semver 1.11.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "3301:7:49",
            "scope": 48941,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 48555,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "3278:6:49",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e31312e30",
              "id": 48556,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3311:8:49",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2bd542b2ffecfdece6057c38946629dcb98591c3e740b8a3c2abbc459540076d",
                "typeString": "literal_string \"1.11.0\""
              },
              "value": "1.11.0"
            },
            "visibility": "public"
          },
          {
            "id": 48587,
            "nodeType": "FunctionDefinition",
            "src": "3944:529:49",
            "nodes": [],
            "body": {
              "id": 48586,
              "nodeType": "Block",
              "src": "4186:287:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48577,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48560,
                        "src": "4229:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48578,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48562,
                        "src": "4260:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48579,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48564,
                        "src": "4292:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48580,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48566,
                        "src": "4327:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48581,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48568,
                        "src": "4364:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 48582,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48570,
                        "src": "4407:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48583,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48573,
                        "src": "4448:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 48576,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48645,
                      "src": "4196:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint64_$_t_address_$_t_struct$_ResourceConfig_$48179_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32,uint64,address,struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 48584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_owner",
                      "_overhead",
                      "_scalar",
                      "_batcherHash",
                      "_gasLimit",
                      "_unsafeBlockSigner",
                      "_config"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4196:270:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48585,
                  "nodeType": "ExpressionStatement",
                  "src": "4196:270:49"
                }
              ]
            },
            "documentation": {
              "id": 48558,
              "nodeType": "StructuredDocumentation",
              "src": "3326:613:49",
              "text": "@notice Constructs the SystemConfig contract. Cannot set\n         the owner to `address(0)` due to the Ownable contract's\n         implementation, so set it to `address(0xdEaD)`\n @param _owner             Initial owner of the contract.\n @param _overhead          Initial overhead value.\n @param _scalar            Initial scalar value.\n @param _batcherHash       Initial batcher hash.\n @param _gasLimit          Initial gas limit.\n @param _unsafeBlockSigner Initial unsafe block signer address.\n @param _config            Initial resource config."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 48574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48560,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3973:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "3965:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48562,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "3997:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "3989:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48564,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "4024:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "4016:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48566,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "4049:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "4041:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48565,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4041:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48568,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "4078:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "4071:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48567,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48570,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "4105:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "4097:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48573,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "4172:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48587,
                  "src": "4133:46:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 48572,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48571,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48179,
                      "src": "4133:31:49"
                    },
                    "referencedDeclaration": 48179,
                    "src": "4133:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:230:49"
            },
            "returnParameters": {
              "id": 48575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4186:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48645,
            "nodeType": "FunctionDefinition",
            "src": "4999:735:49",
            "nodes": [],
            "body": {
              "id": 48644,
              "nodeType": "Block",
              "src": "5288:446:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48608,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40539,
                      "src": "5298:14:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5298:16:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48610,
                  "nodeType": "ExpressionStatement",
                  "src": "5298:16:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48612,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48590,
                        "src": "5342:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48611,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40618,
                      "src": "5324:17:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5324:25:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48614,
                  "nodeType": "ExpressionStatement",
                  "src": "5324:25:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48616,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48596,
                        "src": "5442:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48615,
                      "name": "_setBatcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48757,
                      "src": "5426:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 48617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5426:29:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48618,
                  "nodeType": "ExpressionStatement",
                  "src": "5426:29:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48620,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48592,
                        "src": "5492:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48621,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48594,
                        "src": "5512:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48619,
                      "name": "_setGasConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48805,
                      "src": "5465:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 48622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["_overhead", "_scalar"],
                    "nodeType": "FunctionCall",
                    "src": "5465:57:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48623,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:57:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48625,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48598,
                        "src": "5545:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48624,
                      "name": "_setGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48851,
                      "src": "5532:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 48626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5532:23:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48627,
                  "nodeType": "ExpressionStatement",
                  "src": "5532:23:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48629,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48600,
                        "src": "5587:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48628,
                      "name": "_setUnsafeBlockSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48719,
                      "src": "5565:21:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5565:41:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48631,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:41:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48633,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48603,
                        "src": "5635:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 48632,
                      "name": "_setResourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48940,
                      "src": "5616:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResourceConfig_$48179_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 48634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5616:27:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48635,
                  "nodeType": "ExpressionStatement",
                  "src": "5616:27:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48637,
                          "name": "_gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48598,
                          "src": "5661:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 48638,
                            "name": "minimumGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48664,
                            "src": "5674:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                              "typeString": "function () view returns (uint64)"
                            }
                          },
                          "id": 48639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5674:17:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "5661:30:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 48641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5693:33:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 48636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "5653:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5653:74:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48643,
                  "nodeType": "ExpressionStatement",
                  "src": "5653:74:49"
                }
              ]
            },
            "documentation": {
              "id": 48588,
              "nodeType": "StructuredDocumentation",
              "src": "4479:515:49",
              "text": "@notice Initializer.\n         The resource config must be set before the require check.\n @param _owner             Initial owner of the contract.\n @param _overhead          Initial overhead value.\n @param _scalar            Initial scalar value.\n @param _batcherHash       Initial batcher hash.\n @param _gasLimit          Initial gas limit.\n @param _unsafeBlockSigner Initial unsafe block signer address.\n @param _config            Initial ResourceConfig."
            },
            "functionSelector": "f975e925",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48605,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40715,
                  "src": "5272:11:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "5272:11:49"
              }
            ],
            "name": "initialize",
            "nameLocation": "5008:10:49",
            "parameters": {
              "id": 48604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48590,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5036:6:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5028:14:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5028:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48592,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "5060:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5052:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5052:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48594,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "5087:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5079:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5079:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48596,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "5112:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5104:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48595,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5104:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48598,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "5141:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5134:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48597,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48600,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "5168:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5160:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48603,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "5235:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48645,
                  "src": "5196:46:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 48602,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48601,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48179,
                      "src": "5196:31:49"
                    },
                    "referencedDeclaration": 48179,
                    "src": "5196:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5018:230:49"
            },
            "returnParameters": {
              "id": 48607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5288:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48664,
            "nodeType": "FunctionDefinition",
            "src": "6192:161:49",
            "nodes": [],
            "body": {
              "id": 48663,
              "nodeType": "Block",
              "src": "6248:105:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 48661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48653,
                            "name": "_resourceConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48543,
                            "src": "6272:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
                              "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                            }
                          },
                          "id": 48654,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxResourceLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48168,
                          "src": "6272:32:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 48652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6265:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 48651,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6265:6:49",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 48655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6265:40:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48658,
                            "name": "_resourceConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48543,
                            "src": "6315:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
                              "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                            }
                          },
                          "id": 48659,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "systemTxMaxGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48176,
                          "src": "6315:30:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 48657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6308:6:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 48656,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6308:6:49",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 48660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6308:38:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6265:81:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 48650,
                  "id": 48662,
                  "nodeType": "Return",
                  "src": "6258:88:49"
                }
              ]
            },
            "documentation": {
              "id": 48646,
              "nodeType": "StructuredDocumentation",
              "src": "5740:447:49",
              "text": "@notice Returns the minimum L2 gas limit that can be safely set for the system to\n         operate. The L2 gas limit must be larger than or equal to the amount of\n         gas that is allocated for deposits per block plus the amount of gas that\n         is allocated for the system transaction.\n         This function is used to determine if changes to parameters are safe.\n @return uint64 Minimum gas limit."
            },
            "functionSelector": "4add321d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimumGasLimit",
            "nameLocation": "6201:15:49",
            "parameters": {
              "id": 48647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6216:2:49"
            },
            "returnParameters": {
              "id": 48650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48664,
                  "src": "6240:6:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48648,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6240:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6239:8:49"
            },
            "scope": 48941,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48678,
            "nodeType": "FunctionDefinition",
            "src": "6678:134:49",
            "nodes": [],
            "body": {
              "id": 48677,
              "nodeType": "Block",
              "src": "6743:69:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48670,
                      "name": "addr_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48668,
                      "src": "6753:5:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48673,
                          "name": "UNSAFE_BLOCK_SIGNER_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48527,
                          "src": "6780:24:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 48671,
                          "name": "Storage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50693,
                          "src": "6761:7:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Storage_$50693_$",
                            "typeString": "type(library Storage)"
                          }
                        },
                        "id": 48672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50642,
                        "src": "6761:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (bytes32) view returns (address)"
                        }
                      },
                      "id": 48674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6761:44:49",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6753:52:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48676,
                  "nodeType": "ExpressionStatement",
                  "src": "6753:52:49"
                }
              ]
            },
            "documentation": {
              "id": 48665,
              "nodeType": "StructuredDocumentation",
              "src": "6359:272:49",
              "text": "@notice High level getter for the unsafe block signer address.\n         Unsafe blocks can be propagated across the p2p network if they are signed by the\n         key corresponding to this address.\n @return addr_ Address of the unsafe block signer."
            },
            "functionSelector": "1fd19ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafeBlockSigner",
            "nameLocation": "6687:17:49",
            "parameters": {
              "id": 48666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6704:2:49"
            },
            "returnParameters": {
              "id": 48669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48668,
                  "mutability": "mutable",
                  "name": "addr_",
                  "nameLocation": "6736:5:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48678,
                  "src": "6728:13:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6727:15:49"
            },
            "scope": 48941,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48691,
            "nodeType": "FunctionDefinition",
            "src": "6975:135:49",
            "nodes": [],
            "body": {
              "id": 48690,
              "nodeType": "Block",
              "src": "7052:58:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48687,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48681,
                        "src": "7084:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48686,
                      "name": "_setUnsafeBlockSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48719,
                      "src": "7062:21:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7062:41:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48689,
                  "nodeType": "ExpressionStatement",
                  "src": "7062:41:49"
                }
              ]
            },
            "documentation": {
              "id": 48679,
              "nodeType": "StructuredDocumentation",
              "src": "6818:152:49",
              "text": "@notice Updates the unsafe block signer address. Can only be called by the owner.\n @param _unsafeBlockSigner New unsafe block signer address."
            },
            "functionSelector": "18d13918",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48683,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40558,
                  "src": "7042:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "7042:9:49"
              }
            ],
            "name": "setUnsafeBlockSigner",
            "nameLocation": "6984:20:49",
            "parameters": {
              "id": 48682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48681,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "7013:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48691,
                  "src": "7005:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7005:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7004:28:49"
            },
            "returnParameters": {
              "id": 48685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7052:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48719,
            "nodeType": "FunctionDefinition",
            "src": "7240:284:49",
            "nodes": [],
            "body": {
              "id": 48718,
              "nodeType": "Block",
              "src": "7308:216:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48700,
                        "name": "UNSAFE_BLOCK_SIGNER_SLOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48527,
                        "src": "7337:24:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 48701,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48694,
                        "src": "7363:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48697,
                        "name": "Storage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50693,
                        "src": "7318:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Storage_$50693_$",
                          "typeString": "type(library Storage)"
                        }
                      },
                      "id": 48699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50652,
                      "src": "7318:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 48702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7318:64:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48703,
                  "nodeType": "ExpressionStatement",
                  "src": "7318:64:49"
                },
                {
                  "assignments": [48705],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48705,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7406:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 48718,
                      "src": "7393:17:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48704,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7393:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48710,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48708,
                        "name": "_unsafeBlockSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48694,
                        "src": "7424:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48706,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7413:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "7413:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:30:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7393:50:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48712,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48521,
                        "src": "7471:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48713,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48517,
                          "src": "7480:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$48517_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 48714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "UNSAFE_BLOCK_SIGNER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48516,
                        "src": "7480:30:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 48715,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48705,
                        "src": "7512:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48711,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48553,
                      "src": "7458:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$48517_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 48716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7458:59:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48717,
                  "nodeType": "EmitStatement",
                  "src": "7453:64:49"
                }
              ]
            },
            "documentation": {
              "id": 48692,
              "nodeType": "StructuredDocumentation",
              "src": "7116:119:49",
              "text": "@notice Updates the unsafe block signer address.\n @param _unsafeBlockSigner New unsafe block signer address."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setUnsafeBlockSigner",
            "nameLocation": "7249:21:49",
            "parameters": {
              "id": 48695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48694,
                  "mutability": "mutable",
                  "name": "_unsafeBlockSigner",
                  "nameLocation": "7279:18:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48719,
                  "src": "7271:26:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7271:7:49",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7270:28:49"
            },
            "returnParameters": {
              "id": 48696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7308:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48732,
            "nodeType": "FunctionDefinition",
            "src": "7651:111:49",
            "nodes": [],
            "body": {
              "id": 48731,
              "nodeType": "Block",
              "src": "7716:46:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48728,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48722,
                        "src": "7742:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 48727,
                      "name": "_setBatcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48757,
                      "src": "7726:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 48729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:29:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48730,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:29:49"
                }
              ]
            },
            "documentation": {
              "id": 48720,
              "nodeType": "StructuredDocumentation",
              "src": "7530:116:49",
              "text": "@notice Updates the batcher hash. Can only be called by the owner.\n @param _batcherHash New batcher hash."
            },
            "functionSelector": "c9b26f61",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48725,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48724,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40558,
                  "src": "7706:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "7706:9:49"
              }
            ],
            "name": "setBatcherHash",
            "nameLocation": "7660:14:49",
            "parameters": {
              "id": 48723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48722,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "7683:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48732,
                  "src": "7675:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7675:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7674:22:49"
            },
            "returnParameters": {
              "id": 48726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7716:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48757,
            "nodeType": "FunctionDefinition",
            "src": "7879:216:49",
            "nodes": [],
            "body": {
              "id": 48756,
              "nodeType": "Block",
              "src": "7935:160:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48738,
                      "name": "batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48536,
                      "src": "7945:11:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48739,
                      "name": "_batcherHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48735,
                      "src": "7959:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7945:26:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 48741,
                  "nodeType": "ExpressionStatement",
                  "src": "7945:26:49"
                },
                {
                  "assignments": [48743],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48743,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7995:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 48756,
                      "src": "7982:17:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48742,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7982:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48748,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48746,
                        "name": "_batcherHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48735,
                        "src": "8013:12:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 48744,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8002:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "8002:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8002:24:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7982:44:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48750,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48521,
                        "src": "8054:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48751,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48517,
                          "src": "8063:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$48517_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 48752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "BATCHER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48513,
                        "src": "8063:18:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 48753,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48743,
                        "src": "8083:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48749,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48553,
                      "src": "8041:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$48517_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 48754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8041:47:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48755,
                  "nodeType": "EmitStatement",
                  "src": "8036:52:49"
                }
              ]
            },
            "documentation": {
              "id": 48733,
              "nodeType": "StructuredDocumentation",
              "src": "7768:106:49",
              "text": "@notice Internal function for updating the batcher hash.\n @param _batcherHash New batcher hash."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBatcherHash",
            "nameLocation": "7888:15:49",
            "parameters": {
              "id": 48736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48735,
                  "mutability": "mutable",
                  "name": "_batcherHash",
                  "nameLocation": "7912:12:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48757,
                  "src": "7904:20:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 48734,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7904:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7903:22:49"
            },
            "returnParameters": {
              "id": 48737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7935:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48773,
            "nodeType": "FunctionDefinition",
            "src": "8258:127:49",
            "nodes": [],
            "body": {
              "id": 48772,
              "nodeType": "Block",
              "src": "8335:50:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48768,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48760,
                        "src": "8359:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48769,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48762,
                        "src": "8370:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48767,
                      "name": "_setGasConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48805,
                      "src": "8345:13:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 48770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8345:33:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48771,
                  "nodeType": "ExpressionStatement",
                  "src": "8345:33:49"
                }
              ]
            },
            "documentation": {
              "id": 48758,
              "nodeType": "StructuredDocumentation",
              "src": "8101:152:49",
              "text": "@notice Updates gas config. Can only be called by the owner.\n @param _overhead New overhead value.\n @param _scalar   New scalar value."
            },
            "functionSelector": "935f029e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48765,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48764,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40558,
                  "src": "8325:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "8325:9:49"
              }
            ],
            "name": "setGasConfig",
            "nameLocation": "8267:12:49",
            "parameters": {
              "id": 48763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48760,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "8288:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48773,
                  "src": "8280:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8280:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48762,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "8307:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48773,
                  "src": "8299:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8299:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8279:36:49"
            },
            "returnParameters": {
              "id": 48766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8335:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48805,
            "nodeType": "FunctionDefinition",
            "src": "8542:257:49",
            "nodes": [],
            "body": {
              "id": 48804,
              "nodeType": "Block",
              "src": "8610:189:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48781,
                      "name": "overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48530,
                      "src": "8620:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48782,
                      "name": "_overhead",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48776,
                      "src": "8631:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8620:20:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48784,
                  "nodeType": "ExpressionStatement",
                  "src": "8620:20:49"
                },
                {
                  "expression": {
                    "id": 48787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48785,
                      "name": "scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48533,
                      "src": "8650:6:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48786,
                      "name": "_scalar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48778,
                      "src": "8659:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8650:16:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48788,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:16:49"
                },
                {
                  "assignments": [48790],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48790,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "8690:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 48804,
                      "src": "8677:17:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48789,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8677:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48796,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48793,
                        "name": "_overhead",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48776,
                        "src": "8708:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 48794,
                        "name": "_scalar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48778,
                        "src": "8719:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48791,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8697:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "8697:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8697:30:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8677:50:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48798,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48521,
                        "src": "8755:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48799,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48517,
                          "src": "8764:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$48517_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 48800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GAS_CONFIG",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48514,
                        "src": "8764:21:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 48801,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48790,
                        "src": "8787:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48797,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48553,
                      "src": "8742:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$48517_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 48802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8742:50:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48803,
                  "nodeType": "EmitStatement",
                  "src": "8737:55:49"
                }
              ]
            },
            "documentation": {
              "id": 48774,
              "nodeType": "StructuredDocumentation",
              "src": "8391:146:49",
              "text": "@notice Internal function for updating the gas config.\n @param _overhead New overhead value.\n @param _scalar   New scalar value."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setGasConfig",
            "nameLocation": "8551:13:49",
            "parameters": {
              "id": 48779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48776,
                  "mutability": "mutable",
                  "name": "_overhead",
                  "nameLocation": "8573:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48805,
                  "src": "8565:17:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8565:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48778,
                  "mutability": "mutable",
                  "name": "_scalar",
                  "nameLocation": "8592:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48805,
                  "src": "8584:15:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8584:7:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8564:36:49"
            },
            "returnParameters": {
              "id": 48780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8610:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48818,
            "nodeType": "FunctionDefinition",
            "src": "8920:98:49",
            "nodes": [],
            "body": {
              "id": 48817,
              "nodeType": "Block",
              "src": "8978:40:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48814,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48808,
                        "src": "9001:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "id": 48813,
                      "name": "_setGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48851,
                      "src": "8988:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64)"
                      }
                    },
                    "id": 48815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:23:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48816,
                  "nodeType": "ExpressionStatement",
                  "src": "8988:23:49"
                }
              ]
            },
            "documentation": {
              "id": 48806,
              "nodeType": "StructuredDocumentation",
              "src": "8805:110:49",
              "text": "@notice Updates the L2 gas limit. Can only be called by the owner.\n @param _gasLimit New gas limit."
            },
            "functionSelector": "b40a817c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48810,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40558,
                  "src": "8968:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "8968:9:49"
              }
            ],
            "name": "setGasLimit",
            "nameLocation": "8929:11:49",
            "parameters": {
              "id": 48809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48808,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "8948:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48818,
                  "src": "8941:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48807,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8940:18:49"
            },
            "returnParameters": {
              "id": 48812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8978:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48851,
            "nodeType": "FunctionDefinition",
            "src": "9129:286:49",
            "nodes": [],
            "body": {
              "id": 48850,
              "nodeType": "Block",
              "src": "9178:237:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48825,
                          "name": "_gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48821,
                          "src": "9196:9:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 48826,
                            "name": "minimumGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48664,
                            "src": "9209:15:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                              "typeString": "function () view returns (uint64)"
                            }
                          },
                          "id": 48827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9209:17:49",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "9196:30:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 48829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9228:33:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 48824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9188:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9188:74:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48831,
                  "nodeType": "ExpressionStatement",
                  "src": "9188:74:49"
                },
                {
                  "expression": {
                    "id": 48834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48832,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48539,
                      "src": "9272:8:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48833,
                      "name": "_gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48821,
                      "src": "9283:9:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "9272:20:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 48835,
                  "nodeType": "ExpressionStatement",
                  "src": "9272:20:49"
                },
                {
                  "assignments": [48837],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48837,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "9316:4:49",
                      "nodeType": "VariableDeclaration",
                      "scope": 48850,
                      "src": "9303:17:49",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48836,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9303:5:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48840,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48821,
                        "src": "9334:9:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint64", "typeString": "uint64" }
                      ],
                      "expression": {
                        "id": 48838,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "9323:3:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 48839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "9323:10:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 48841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9323:21:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9303:41:49"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 48844,
                        "name": "VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48521,
                        "src": "9372:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 48845,
                          "name": "UpdateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48517,
                          "src": "9381:10:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_UpdateType_$48517_$",
                            "typeString": "type(enum SystemConfig.UpdateType)"
                          }
                        },
                        "id": 48846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "GAS_LIMIT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48515,
                        "src": "9381:20:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        }
                      },
                      {
                        "id": 48847,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48837,
                        "src": "9403:4:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_UpdateType_$48517",
                          "typeString": "enum SystemConfig.UpdateType"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48843,
                      "name": "ConfigUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48553,
                      "src": "9359:12:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_UpdateType_$48517_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,enum SystemConfig.UpdateType,bytes memory)"
                      }
                    },
                    "id": 48848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9359:49:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48849,
                  "nodeType": "EmitStatement",
                  "src": "9354:54:49"
                }
              ]
            },
            "documentation": {
              "id": 48819,
              "nodeType": "StructuredDocumentation",
              "src": "9024:100:49",
              "text": "@notice Internal function for updating the L2 gas limit.\n @param _gasLimit New gas limit."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setGasLimit",
            "nameLocation": "9138:12:49",
            "parameters": {
              "id": 48822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48821,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "9158:9:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48851,
                  "src": "9151:16:49",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 48820,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9151:6:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9150:18:49"
            },
            "returnParameters": {
              "id": 48823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9178:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48861,
            "nodeType": "FunctionDefinition",
            "src": "9574:128:49",
            "nodes": [],
            "body": {
              "id": 48860,
              "nodeType": "Block",
              "src": "9663:39:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48858,
                    "name": "_resourceConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48543,
                    "src": "9680:15:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
                      "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 48857,
                  "id": 48859,
                  "nodeType": "Return",
                  "src": "9673:22:49"
                }
              ]
            },
            "documentation": {
              "id": 48852,
              "nodeType": "StructuredDocumentation",
              "src": "9421:148:49",
              "text": "@notice A getter for the resource config.\n         Ensures that the struct is returned instead of a tuple.\n @return ResourceConfig"
            },
            "functionSelector": "cc731b02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resourceConfig",
            "nameLocation": "9583:14:49",
            "parameters": {
              "id": 48853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9597:2:49"
            },
            "returnParameters": {
              "id": 48857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48856,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48861,
                  "src": "9623:38:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 48855,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48854,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48179,
                      "src": "9623:31:49"
                    },
                    "referencedDeclaration": 48179,
                    "src": "9623:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9622:40:49"
            },
            "scope": 48941,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48875,
            "nodeType": "FunctionDefinition",
            "src": "9969:138:49",
            "nodes": [],
            "body": {
              "id": 48874,
              "nodeType": "Block",
              "src": "10063:44:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48871,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48865,
                        "src": "10092:7:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                        }
                      ],
                      "id": 48870,
                      "name": "_setResourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48940,
                      "src": "10073:18:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResourceConfig_$48179_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 48872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10073:27:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48873,
                  "nodeType": "ExpressionStatement",
                  "src": "10073:27:49"
                }
              ]
            },
            "documentation": {
              "id": 48862,
              "nodeType": "StructuredDocumentation",
              "src": "9708:256:49",
              "text": "@notice An external setter for the resource config.\n         In the future, this method may emit an event that the `op-node` picks up\n         for when the resource config is changed.\n @param _config The new resource config values."
            },
            "functionSelector": "c71973f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48868,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48867,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40558,
                  "src": "10053:9:49"
                },
                "nodeType": "ModifierInvocation",
                "src": "10053:9:49"
              }
            ],
            "name": "setResourceConfig",
            "nameLocation": "9978:17:49",
            "parameters": {
              "id": 48866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48865,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "10035:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48875,
                  "src": "9996:46:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 48864,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48863,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48179,
                      "src": "9996:31:49"
                    },
                    "referencedDeclaration": 48179,
                    "src": "9996:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9995:48:49"
            },
            "returnParameters": {
              "id": 48869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10063:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48940,
            "nodeType": "FunctionDefinition",
            "src": "10315:1279:49",
            "nodes": [],
            "body": {
              "id": 48939,
              "nodeType": "Block",
              "src": "10400:1194:49",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 48887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48883,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48879,
                            "src": "10499:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 48884,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "minimumBaseFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48174,
                          "src": "10499:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 48885,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48879,
                            "src": "10525:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 48886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maximumBaseFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48178,
                          "src": "10525:22:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "10499:48:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a206d696e206261736520666565206d757374206265206c657373207468616e206d61782062617365",
                        "id": 48888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10549:55:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16806173f08c8c6ae15c41ada2868e19f22d95483ee444a690f5c71e256ae59c",
                          "typeString": "literal_string \"SystemConfig: min base fee must be less than max base\""
                        },
                        "value": "SystemConfig: min base fee must be less than max base"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_16806173f08c8c6ae15c41ada2868e19f22d95483ee444a690f5c71e256ae59c",
                          "typeString": "literal_string \"SystemConfig: min base fee must be less than max base\""
                        }
                      ],
                      "id": 48882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10478:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10478:136:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48890,
                  "nodeType": "ExpressionStatement",
                  "src": "10478:136:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 48895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48892,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48879,
                            "src": "10695:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 48893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "baseFeeMaxChangeDenominator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48172,
                          "src": "10695:35:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10733:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10695:39:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a2064656e6f6d696e61746f72206d757374206265206c6172676572207468616e2031",
                        "id": 48896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10736:49:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a2fada1fe2708845c3612912d722eb6febd82dcb64b4a98ff41143480c2d7e",
                          "typeString": "literal_string \"SystemConfig: denominator must be larger than 1\""
                        },
                        "value": "SystemConfig: denominator must be larger than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_c0a2fada1fe2708845c3612912d722eb6febd82dcb64b4a98ff41143480c2d7e",
                          "typeString": "literal_string \"SystemConfig: denominator must be larger than 1\""
                        }
                      ],
                      "id": 48891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10687:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10687:99:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48898,
                  "nodeType": "ExpressionStatement",
                  "src": "10687:99:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 48906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 48904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 48900,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48879,
                              "src": "10982:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                                "typeString": "struct ResourceMetering.ResourceConfig memory"
                              }
                            },
                            "id": 48901,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxResourceLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48168,
                            "src": "10982:24:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 48902,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48879,
                              "src": "11009:7:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                                "typeString": "struct ResourceMetering.ResourceConfig memory"
                              }
                            },
                            "id": 48903,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "systemTxMaxGas",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48176,
                            "src": "11009:22:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10982:49:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 48905,
                          "name": "gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48539,
                          "src": "11035:8:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "10982:61:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20676173206c696d697420746f6f206c6f77",
                        "id": 48907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11045:33:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        },
                        "value": "SystemConfig: gas limit too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_8e802b99b7871665ffc01e67ec99efdd73637cc03d3134ef893ffd574a9c611a",
                          "typeString": "literal_string \"SystemConfig: gas limit too low\""
                        }
                      ],
                      "id": 48899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10974:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10974:105:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48909,
                  "nodeType": "ExpressionStatement",
                  "src": "10974:105:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 48914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48911,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48879,
                            "src": "11154:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 48912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "elasticityMultiplier",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48170,
                          "src": "11154:28:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 48913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11185:1:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11154:32:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20656c6173746963697479206d756c7469706c6965722063616e6e6f742062652030",
                        "id": 48915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11188:49:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59a820cce0ebef6a669f57c5972b936f0f32ddecc515ae6b733585a6a86ccb87",
                          "typeString": "literal_string \"SystemConfig: elasticity multiplier cannot be 0\""
                        },
                        "value": "SystemConfig: elasticity multiplier cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_59a820cce0ebef6a669f57c5972b936f0f32ddecc515ae6b733585a6a86ccb87",
                          "typeString": "literal_string \"SystemConfig: elasticity multiplier cannot be 0\""
                        }
                      ],
                      "id": 48910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "11146:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11146:92:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48917,
                  "nodeType": "ExpressionStatement",
                  "src": "11146:92:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 48931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 48927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 48923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 48919,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48879,
                                        "src": "11338:7:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                                        }
                                      },
                                      "id": 48920,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxResourceLimit",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48168,
                                      "src": "11338:24:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 48921,
                                        "name": "_config",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48879,
                                        "src": "11365:7:49",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                                          "typeString": "struct ResourceMetering.ResourceConfig memory"
                                        }
                                      },
                                      "id": 48922,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "elasticityMultiplier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48170,
                                      "src": "11365:28:49",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "11338:55:49",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "id": 48924,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11337:57:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 48925,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48879,
                                  "src": "11397:7:49",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                                    "typeString": "struct ResourceMetering.ResourceConfig memory"
                                  }
                                },
                                "id": 48926,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "elasticityMultiplier",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48170,
                                "src": "11397:28:49",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "11337:88:49",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "id": 48928,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11336:90:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 48929,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48879,
                            "src": "11446:7:49",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                              "typeString": "struct ResourceMetering.ResourceConfig memory"
                            }
                          },
                          "id": 48930,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxResourceLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48168,
                          "src": "11446:24:49",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "11336:134:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53797374656d436f6e6669673a20707265636973696f6e206c6f7373207769746820746172676574207265736f75726365206c696d6974",
                        "id": 48932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11484:57:49",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fef4ef4eda0ba4ff507d3db7d2e0ca5d7440f98c636615806e09e69039b34a5e",
                          "typeString": "literal_string \"SystemConfig: precision loss with target resource limit\""
                        },
                        "value": "SystemConfig: precision loss with target resource limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_fef4ef4eda0ba4ff507d3db7d2e0ca5d7440f98c636615806e09e69039b34a5e",
                          "typeString": "literal_string \"SystemConfig: precision loss with target resource limit\""
                        }
                      ],
                      "id": 48918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "11315:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11315:236:49",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48934,
                  "nodeType": "ExpressionStatement",
                  "src": "11315:236:49"
                },
                {
                  "expression": {
                    "id": 48937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48935,
                      "name": "_resourceConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48543,
                      "src": "11562:15:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
                        "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48936,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48879,
                      "src": "11580:7:49",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                        "typeString": "struct ResourceMetering.ResourceConfig memory"
                      }
                    },
                    "src": "11562:25:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage",
                      "typeString": "struct ResourceMetering.ResourceConfig storage ref"
                    }
                  },
                  "id": 48938,
                  "nodeType": "ExpressionStatement",
                  "src": "11562:25:49"
                }
              ]
            },
            "documentation": {
              "id": 48876,
              "nodeType": "StructuredDocumentation",
              "src": "10113:197:49",
              "text": "@notice An internal setter for the resource config.\n         Ensures that the config is sane before storing it by checking for invariants.\n @param _config The new resource config."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResourceConfig",
            "nameLocation": "10324:18:49",
            "parameters": {
              "id": 48880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48879,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "10382:7:49",
                  "nodeType": "VariableDeclaration",
                  "scope": 48940,
                  "src": "10343:46:49",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$48179_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 48878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48877,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48179,
                      "src": "10343:31:49"
                    },
                    "referencedDeclaration": 48179,
                    "src": "10343:31:49",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$48179_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10342:48:49"
            },
            "returnParameters": {
              "id": 48881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10400:0:49"
            },
            "scope": 48941,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48509,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40644,
              "src": "653:18:49"
            },
            "id": 48510,
            "nodeType": "InheritanceSpecifier",
            "src": "653:18:49"
          },
          {
            "baseName": {
              "id": 48511,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57804,
              "src": "673:7:49"
            },
            "id": 48512,
            "nodeType": "InheritanceSpecifier",
            "src": "673:7:49"
          }
        ],
        "canonicalName": "SystemConfig",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48508,
          "nodeType": "StructuredDocumentation",
          "src": "389:239:49",
          "text": "@title SystemConfig\n @notice The SystemConfig contract is used to manage configuration of an Optimism network.\n         All configuration is stored on L1 and picked up by L2 as part of the derviation of\n         the L2 chain."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [48941, 57804, 40644, 41080, 40795],
        "name": "SystemConfig",
        "nameLocation": "637:12:49",
        "scope": 48942,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 49
}
